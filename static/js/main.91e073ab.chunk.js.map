{"version":3,"sources":["components/contactItem/ContactItem.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.js","components/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","changeHandler","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","contactForm","type","onChange","Component","ContactItem","contact","id","onRemoveContact","listItem","listItemP","listItemButton","onClick","ContactList","contacts","contactList","map","Filter","onChangeFilter","App","filter","addContact","uuid","prevState","removeContact","changeFilter","getFilteredContacts","toLowerCase","includes","storedContacts","JSON","parse","localStorage","getItem","length","prevProps","setItem","stringify","sectionTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91e073ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__2bG2p\",\"listItemP\":\"ContactItem_listItemP__2T69M\",\"listItemButton\":\"ContactItem_listItemButton__35Gx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__2hxQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3v9Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2N9OI\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styles from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={() => onRemoveContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport ContactItem from '../contactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onRemoveContact={onRemoveContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from './App.module.css';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  componentDidMount() {\r\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    storedContacts &&\r\n      storedContacts.length > 0 &&\r\n      this.setState({ contacts: storedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    prevState.contacts !== this.state.contacts &&\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className={styles.sectionTitle}>Phonebook</h1>\r\n\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2 className={styles.sectionTitle}>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        <ContactList\r\n          onRemoveContact={this.removeContact}\r\n          contacts={this.getFilteredContacts()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}